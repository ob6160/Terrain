#version 430 core

layout (local_size_x = 1, local_size_y = 1) in;
layout (rgba32f, binding = 0) uniform highp image2D nextHeightTex;
layout (rgba32f, binding = 1) uniform highp image2D nextOutflowTex;
layout (rgba32f, binding = 2) uniform highp image2D nextVelocityTex;

layout (rgba32f, binding = 3) readonly uniform highp image2D currentHeightTex;
layout (rgba32f, binding = 4) readonly uniform highp image2D currentOutflowTex;
layout (rgba32f, binding = 5) readonly uniform highp image2D currentVelocityTex;

void main() {
    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);

//    var leftIndex = utils.ToIndex(x-1, y, t.width)
//    var leftCellInflow float32 = 0
//    if WithinBounds(leftIndex, dimensions) {
//        _, leftCellInflow, _, _ = swap.outflowFlux[leftIndex].Elem()
//    }

    ivec2 leftStorePos = ivec2(storePos.x - 1, storePos.y);
    vec4 leftCurrentHeightTexel = imageLoad(currentHeightTex, leftStorePos);
    vec4 leftCurrentOuflow = imageLoad(currentOutflowTex, leftStorePos);
    float leftCellInflow = leftCurrentHeightTexel.g;


    ivec2 rightStorePos = ivec2(storePos.x + 1, storePos.y);

    ivec2 topStorePos = ivec2(storePos.x, storePos.y - 1);

    ivec2 bottomStorePos = ivec2(storePos.x, storePos.y + 1);

    imageStore(heightTex, storePos, vec4(0.0, 1.0, 0.0, 1.0));
}